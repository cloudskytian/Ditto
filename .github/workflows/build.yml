name: MSBuild

on:
  pull_request:
    branches:
      - 'master'

env:
  SOLUTION_FILE_PATH: CP_Main_10.sln
  VERSION_FILENAME: 3_24_x_0  
  VERSION_DOT_FILENAME: 3.24.x.0  

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Generate build number
        uses: onyxmueller/build-tag-number@v1
        with:
          token: ${{secrets.github_token}}
        #env:
        #    VERSION_FILENAME = 3_25_${env:BUILD_NUMBER}_0  
        #    VERSION_DOT_FILENAME = 3.25.${env:BUILD_NUMBER}.0  
          
      - name: Set env
        run: |

            # set them as GitHub ENV variables
            echo "VERSION_FILENAME=5" >> $GITHUB_ENV
            echo "VERSION_DOT_FILENAME=6" >> $GITHUB_ENV

            # retrieve these GitHub ENV variables
            echo "${{ env.VERSION_FILENAME }} out of ${{ env.VERSION_DOT_FILENAME }} tests failed on CI"
      
      - name: Print new build number
        run: |
            echo "Build number is ${env:VERSION_FILENAME}"
            echo "Build number is ${env:VERSION_DOT_FILENAME}"

#      - name: Add MSBuild to PATH
#        uses: microsoft/setup-msbuild@v2

      #- name: Restore NuGet packages
      #  working-directory: ${{env.GITHUB_WORKSPACE}}
      #  run: nuget restore ${{env.SOLUTION_FILE_PATH}}

      #- name: Build 32bit
      #  run: msbuild CP_Main_10.sln /p:Configuration=Release /p:Platform=Win32
        
      #- name: Build 64bit
      #  run: msbuild CP_Main_10.sln /p:Configuration=Release /p:Platform=x64  
        
#      - name: Compile 32bit installer
#        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
#        with:
#          path: DittoSetup\DittoSetup_10.iss
#          options: /F"DittoSetup_${{env.VERSION_FILENAME}}"
#          
#      - name: Compile 64bit installer
#        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
#        with:
#          path: DittoSetup\DittoSetup_10.iss
#          options: /F"DittoSetup_64bit_${{env.VERSION_FILENAME}}" "/dbit64=1"
#          
#      - name: Build Portable
#        run: |
#            DittoSetup\BuildPortableZIP.bat "DittoPortable_${{env.VERSION_FILENAME}}" bit32
#            DittoSetup\BuildPortableZIP.bat "DittoPortable_64bit_${{env.VERSION_FILENAME}}" bit64
#            
#      - name: Zip Debug Files
#        run: |
#            7z a DittoSetup\output\DittoDebug_${{env.VERSION_FILENAME}}.7z *.pdb -r
#            7z a DittoSetup\output\DittoDebug_${{env.VERSION_FILENAME}}.7z *.map -r
#            
#      - name: Choco - Ditto
#        shell: pwsh
#        run: |
#            (Get-Content 'DittoSetup\Chocolatey\ditto.nuspec' -Raw).Replace("%version%", "${{env.VERSION_DOT_FILENAME}}") | Out-File 'DittoSetup\Chocolatey\ditto.nuspec'
#            copy DittoSetup\Output\DittoSetup_${{env.VERSION_FILENAME}}.exe DittoSetup\Chocolatey\tools\DittoSetup_${{env.VERSION_FILENAME}}.exe
#            copy DittoSetup\Output\DittoSetup_64bit_${{env.VERSION_FILENAME}}.exe DittoSetup\Chocolatey\tools\DittoSetup_64bit_${{env.VERSION_FILENAME}}.exe
#            cd DittoSetup\Chocolatey
#            choco pack     
#            choco push --source https://push.chocolatey.org/ --key ${{ secrets.CHOCO_API_KEY}}
#            cd ..
#            cd ..
#            
#      - name: Choco - Ditto.Install
#        shell: pwsh
#        run: |
#            (Get-Content 'DittoSetup\Chocolatey.install\ditto.nuspec' -Raw).Replace("%version%", "${{env.VERSION_DOT_FILENAME}}") | Out-File 'DittoSetup\Chocolatey.install\ditto.nuspec'
#            copy DittoSetup\output\DittoSetup_${{env.VERSION_FILENAME}}.exe DittoSetup\Chocolatey.install\tools\DittoSetup_${{env.VERSION_FILENAME}}.exe
#            copy DittoSetup\output\DittoSetup_64bit_${{env.VERSION_FILENAME}}.exe DittoSetup\Chocolatey.install\tools\DittoSetup_64bit_${{env.VERSION_FILENAME}}.exe
#            cd DittoSetup\Chocolatey.install
#            choco pack     
#            choco push --source https://push.chocolatey.org/ --key ${{ secrets.CHOCO_API_KEY}}
#            cd ..
#            cd ..
#    
#      - name: Choco - Ditto.Portable
#        shell: pwsh
#        run: |
#            (Get-Content 'DittoSetup\Chocolatey.portable\ditto.nuspec' -Raw).Replace("%version%", "${{env.VERSION_DOT_FILENAME}}") | Out-File 'DittoSetup\Chocolatey.portable\ditto.nuspec'
#            copy DittoSetup\output\DittoPortable_${{env.VERSION_FILENAME}}.zip DittoSetup\Chocolatey.portable\tools\DittoPortable_${{env.VERSION_FILENAME}}.zip
#            copy DittoSetup\output\DittoPortable_64bit_${{env.VERSION_FILENAME}}.zip DittoSetup\Chocolatey.portable\tools\DittoPortable_64bit_${{env.VERSION_FILENAME}}.zip
#            cd DittoSetup\Chocolatey.portable
#            choco pack     
#            choco push --source https://push.chocolatey.org/ --key ${{ secrets.CHOCO_API_KEY}}
#            cd ..
#            cd ..
#            
#      - name: Build appx
#        shell: pwsh
#        run: |
#            7z x DittoSetup\output\DittoPortable_${{env.VERSION_FILENAME}}.zip -oDittoSetup\appx -r
#            (Get-Content 'DittoSetup\appx\appxmanifest.xml' -Raw).Replace("%version%", "${{env.VERSION_DOT_FILENAME}}") | Out-File 'DittoSetup\appx\appxmanifest.xml'  
#            cd DittoSetup\appx
#
#            $env:Path += ";C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x86"
#        
#            makeappx.exe pack /f files.ini /p Ditto_${{env.VERSION_FILENAME}}.appx
#            signtool.exe sign -f my.pfx -fd SHA256 -v Ditto_${{env.VERSION_FILENAME}}.appx
#            cd ..
#            cd ..
#            copy DittoSetup\appx\Ditto_${{env.VERSION_FILENAME}}.appx DittoSetup\Output\Ditto_${{env.VERSION_FILENAME}}.appx
#    
#      #- name: Publish to GitHub
#      #  run: npm install ./DittoSetup/GitHubRelease && SET "token=${{ secrets.GITHUB_TOKEN }}" && SET "uploadPath=DittoSetup\output\" && SET "tag=${{env.VERSION_FILENAME}}"  && SET "previous_tag=3.24.246.0" && node ./DittoSetup/GitHubRelease/index.js

